{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","makeArray","meret","arr","Array","i","feltoltGrid","gridMerete","grid","j","Math","floor","random","setState","drawGrid","customFeltolt","tomb","szabaly","R","state","N","survival","death","length","x","tombMeret","parseInt","elhelyez","split","y","a","elhelyeznivalo","b","charAt","error","myGrid","document","getElementById","ctx","getContext","magassag","width","szelesseg","height","fillStyle","fillRect","newGeneration","newGrid","szSzam","szamolSzomszed","allapot","szamolNewGridSzabaly","szamolNewGrid","oldGrid","generation","szomszedok","sz","includes","szsz","checkIfOnGrid","handleBack","alert","startTimer","timer","setInterval","pause","stopTimer","clearInterval","seed","changeFile","event","fajl_neve","target","files","name","formatum","slice","file","reader","FileReader","readAsText","onload","handleFajl","feldolgozandoTomb","fileTomb","result","newRule","verzioSzam","setRule","feldolgozObj","checkIfDefined","push","customFeltolt1_6","sor","adatok","changeGrafMeret","grafMeretSelect","value","this","valasz","className","onClick","id","onChange","style","color","type","map","valtozo","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e3952646.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport \"./App.css\"\nimport {AiFillPlayCircle, AiFillPauseCircle} from \"react-icons/ai\"\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      \n        N:{\n          survival:[2,3],\n          death:[3]\n        }\n      , R:{\n        survival:[],\n        death:[]\n      },\n       gridMerete:80,\n       oldGrid:[],\n       grid:[],\n       generation:0,\n       pause: true,\n       timer:null,\n    }\n  }\n  componentDidMount(){\n    this.feltoltGrid(this.state.gridMerete)\n  }\n  makeArray = (meret) => {\n    \n    let arr = new Array(meret)\n    for (let i = 0; i < meret; i++) {\n      arr[i] = new Array(meret)\n    }\n    return arr\n  }\n  feltoltGrid= (gridMerete)=> {\n    \n    let grid = this.makeArray(gridMerete)\n    \n    for (let i = 0; i < gridMerete; i++) {\n      for (let j = 0; j < gridMerete; j++) {\n        grid[i][j] = Math.floor(Math.random()*2)\n      }\n    }\n    this.setState({\n      grid:grid\n    })\n    this.drawGrid(grid)\n  }\n  customFeltolt= (tomb, szabaly)=> {\n    if(!szabaly){\n      szabaly = this.state.N\n      this.setState({\n        R:{\n          survival:[],\n          death:[]\n        }\n      })\n    }else{\n      this.setState({\n        R:szabaly\n      })\n    }\n    let grid = null\n    try {\n      let tombMeret = 200\n      grid = this.makeArray(tombMeret)\n      for (let i = 0; i < grid.length; i++) {\n        for (let j = 0; j < grid[i].length; j++) {\n          grid[i][j] = 0\n          \n        }\n        \n      }\n      let origo = tombMeret /2    \n      for (let i = 0; i < tomb.length; i++) {\n        let x = origo + parseInt(tomb[i].elhelyez.split(' ')[1]) \n        let y = origo - parseInt(tomb[i].elhelyez.split(' ')[2]) \n        for (let a = 0; a < tomb[i].elhelyeznivalo.length; a++) {\n          for (let b = 0; b <  tomb[i].elhelyeznivalo[a].length; b++) {\n            grid[y+a][x+b] = tomb[i].elhelyeznivalo[a].charAt(b) == '*' ? 1:0\n          }\n        }\n      }\n    } catch (error) {\n        let tombMeret = 400\n        grid = this.makeArray(tombMeret)\n        for (let i = 0; i < grid.length; i++) {\n          for (let j = 0; j < grid[i].length; j++) {\n            grid[i][j] = 0\n            \n          }\n          \n        }\n        let origo = tombMeret /2    \n        for (let i = 0; i < tomb.length; i++) {\n          let x = origo + parseInt(tomb[i].elhelyez.split(' ')[1]) \n          let y = origo - parseInt(tomb[i].elhelyez.split(' ')[2]) \n          for (let a = 0; a < tomb[i].elhelyeznivalo.length; a++) {\n            for (let b = 0; b <  tomb[i].elhelyeznivalo[a].length; b++) {\n              grid[y+a][x+b] = tomb[i].elhelyeznivalo[a].charAt(b) == '*' ? 1:0\n            }\n          }\n        }\n    }\n    \n    this.drawGrid(grid)\n    this.setState({\n      grid:grid\n    })\n  }\n  /*\n  customFeltolt= (data)=> {    \n    let {gridMerete} = this.state\n    let grid = this.makeArray(150)\n    for (let i = 0; i < gridMerete; i++) {\n      if(i < data.length){\n        for (let j = 0; j < grid[i].length; j++) {\n          if(data[i].length >j){\n            grid[i][j] = data[i][j] == '*' ? 1 : 0\n          }else{\n            grid[i][j] = 0\n          }\n        }\n      }else{\n        for (let j = 0; j < grid[i].length; j++) {\n          grid[i][j] = 0 \n        }\n      }\n    }\n    \n    this.drawGrid(grid)\n\n    this.setState({\n      grid:grid\n    })\n  }\n  \n    drawGrid = (grid) => {\n    let myGrid = document.getElementById('myGrid')\n    myGrid.innerHTML = ''\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        myGrid.innerHTML += `<div class=\"gridBlock\" style=\"background-color:${grid[i][j] == 1 ? 'black' : 'gray'};color:${grid[i][j] == 1 ? 'black' : 'gray'}\" ><p >${grid[i][j]}</p></div>`\n        \n      }\n      myGrid.innerHTML += '</br>'\n      \n    }\n  }\n  */\n drawGrid = (grid) => {\n  let myGrid = document.getElementById('myCanvas')\n  var ctx = myGrid.getContext(\"2d\");\n  \n  \n  let magassag = myGrid.width / grid.length\n  \n  for (let i = 0; i < grid.length; i++) {\n    let szelesseg = myGrid.height / grid[i].length\n    for (let j = 0; j < grid[i].length; j++) {\n      ctx.fillStyle = 'black'\n      ctx.fillRect(j*szelesseg-1, i*magassag-1, magassag+2, szelesseg+2);\n      ctx.fillStyle = grid[i][j] == 1 ? 'red' : 'gray'\n      ctx.fillRect(j*szelesseg, i*magassag, magassag, szelesseg);\n    }\n    \n    \n  }\n}\n\n  newGeneration = () => {\n    let { grid  } = this.state\n    let newGrid = this.makeArray(grid.length)\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n          let szSzam = this.szamolSzomszed(grid, i, j)\n          let allapot = grid[i][j]\n          newGrid[i][j] = this.state.R.survival.length > 0 ? this.szamolNewGridSzabaly(szSzam, allapot) : this.szamolNewGrid(szSzam, allapot)\n      }\n      \n    }\n    this.setState({\n      grid:newGrid,\n      oldGrid:grid,\n      generation:this.state.generation+1\n    })\n\n    this.drawGrid(newGrid)\n  }\n  szamolNewGrid=(szomszedok, allapot)=>{\n    /*let newAllapot = 0\n    if(allapot == 0 && szomszedok == 3){\n      newAllapot = 1\n    }else if(allapot == 1 && (szomszedok < 2 || szomszedok > 3)){\n      newAllapot = 0\n    }else{\n      newAllapot = allapot\n    }\n    return newAllapot */\n    let newAllapot = 0\n    if(allapot == 1 && (szomszedok == 3 || szomszedok == 2)){\n      newAllapot = 1\n    }else if(allapot == 0 && szomszedok == 3){\n      newAllapot = 1\n    }else{\n      newAllapot = 0\n    }\n    return newAllapot\n  }\n  szamolNewGridSzabaly=(szomszedok, allapot)=>{\n    let sz = this.state.R\n    let newAllapot = 0 \n    if(allapot == 1 && sz.survival.includes(szomszedok)){\n      newAllapot = 1\n    }else if(allapot == 0 && sz.death.includes(szomszedok)){\n      newAllapot = 1\n    }else{\n      newAllapot = 0\n    }\n    return newAllapot\n\n  }\n\n  szamolSzomszed = (grid, x, y) => {\n    let szsz = 0\n    \n    for (let i = x-1; i < x+2; i++) {  \n      for (let j = y-1; j < y+2; j++) {\n        if(this.checkIfOnGrid(i,j, grid.length)){\n            szsz += grid[i][j]\n          }\n        }\n      }\n      \n    szsz-=grid[x][y]\n    return szsz\n  }/*  ujraSzinez = (grid) => {\n    var cellak = document.getElementsByClassName('gridBlock')\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        let szam = i*grid.length + j\n        cellak[szam].style.color = grid[i][j] == 1 ? 'black' : 'gray'\n        cellak[szam].style.backgroundColor = grid[i][j] == 1 ? 'black' : 'gray'\n      }\n      \n    }\n  }*/\n\n  checkIfOnGrid = (i, j, length) => {\n    return i >-1 && i < length && j >-1 && j < length  ? true : false\n  }\n  handleBack=()=>{\n    if(this.state.grid != this.state.oldGrid && this.state.generation > 0){\n      this.drawGrid(this.state.oldGrid)\n      this.setState({\n        generation:this.state.generation-1,\n        grid:this.state.oldGrid\n      })\n    }else{\n      alert('csak egy generaciot lehet visszalepni')\n    }\n    \n  }\n  startTimer=()=> {\n    var timer = setInterval(this.newGeneration, 100);\n    this.setState({\n      pause:!this.state.pause,\n      timer:timer\n    })\n  }\n  stopTimer=()=> {\n    \n   clearInterval(this.state.timer)\n    this.setState({\n      pause:!this.state.pause,\n      \n    })\n  }\n  seed=()=>{\n    this.feltoltGrid(this.state.gridMerete)\n    this.setState({\n      generation:0, \n      R:{\n        survival:[],\n        death:[]\n      }\n    })\n  }\n\n   changeFile =(event)=> {\n    let fajl_neve = event.target.files[0].name\n    let formatum = fajl_neve.slice(fajl_neve.length-3, fajl_neve.length)\n\n    if(formatum == 'txt' || formatum == 'lif'){\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = event => this.handleFajl(event)\n    }else{\n      alert('csak lif/txt fajlokat fogadunk el')\n    }\n    \n  }\n  handleFajl=(event)=> {\n    /*this.setState({\n      generation:0\n    })\n    console.log(event.target.result)\n    let feldolgozandoFile = []\n      let fileTomb = event.target.result.split('\\n')      \n      for (let i = 0; i < fileTomb.length; i++) {\n        if(fileTomb[i].charAt(0) != '#'){\n          \n          feldolgozandoFile.push(fileTomb[i])\n        }\n      }\n    this.customFeltolt(feldolgozandoFile) */\n    let feldolgozandoTomb = []\n    let fileTomb = event.target.result.split('\\n')\n    let newRule = null\n    let verzioSzam = fileTomb[0].slice(fileTomb[0].length-1,fileTomb[0].length)\n    if(verzioSzam == 5){\n        for (let i = 0; i < fileTomb.length; i++) {\n        if(fileTomb[i].charAt(0) == '#' && fileTomb[i].charAt(1) == 'R'){\n          newRule = this.setRule(fileTomb[i])\n        }\n        let valtozo = fileTomb[i].charAt(0) =='#' && fileTomb[i].charAt(1) =='P' ? true : false\n\n        if(valtozo){\n          let j = i\n          let feldolgozObj = {\n            elhelyez : null,\n            elhelyeznivalo : []\n          }\n          feldolgozObj.elhelyez = fileTomb[i]\n          \n            while(j < fileTomb.length && this.checkIfDefined(fileTomb, j)){\n            feldolgozObj.elhelyeznivalo.push(fileTomb[j+1])\n            j++\n            }\n          \n          \n          feldolgozandoTomb.push(feldolgozObj)\n\n        }\n      }\n      this.customFeltolt(feldolgozandoTomb, newRule)\n\n    }else if(verzioSzam == 6){\n      this.customFeltolt1_6(fileTomb)\n    }\n    \n  }\n  customFeltolt1_6= (fileTomb) => {\n    let tombMeret = 200\n    let grid = this.makeArray(tombMeret)\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        grid[i][j] = 0\n        \n      }\n      \n    }\n    let origo = tombMeret /2    \n    for (let i = 1; i < fileTomb.length; i++) {\n     let x = origo + parseInt(fileTomb[i].split(' ')[0])\n     let y = origo + parseInt(fileTomb[i].split(' ')[1])\n     grid[x][y] = 1 \n     \n\n  }\n  this.drawGrid(grid)\n  this.setState({\n    grid:grid\n  })\n}\n\n\n  checkIfDefined(fileTomb, j){\n    let valasz = false\n    if(fileTomb[j+1]){\n      if(fileTomb[j+1].charAt(0) == '.' || fileTomb[j+1].charAt(0) == '*'){\n        valasz  = true\n      }\n    }\n    return valasz\n    \n  }\n  setRule=(sor)=>{\n\n    let R={\n      survival:[],\n      death:[]\n    }\n    let adatok = sor.slice(3, sor.length).split('/')\n    for (let i = 0; i < adatok.length; i++) {\n      for (let j = 0; j < adatok[i].length; j++) {\n        if(i == 0){\n          R.survival.push(parseInt(adatok[i].charAt(j)) )\n        }else if(i== 1){\n          R.death.push(parseInt(adatok[i].charAt(j)))\n        }\n        \n      }\n      \n    }\n      return R\n\n  }\n  changeGrafMeret=()=>{\n    let grafMeretSelect = document.getElementById('grafMeretSelect')\n    this.feltoltGrid(grafMeretSelect.value)\n    this.setState({\n      gridMerete:grafMeretSelect.value\n    })\n  }\n  \n\n  render() {    \n   \n    return (\n      <div>\n        <nav>\n          <div className='navItem'>\n            \n            <p onClick= { this.newGeneration}>next</p>\n            <p onClick={this.handleBack}>back</p>\n            <select id='grafMeretSelect' onChange={this.changeGrafMeret}>\n              <option value='80'>80x80</option>\n              <option value='100'>100x100</option>\n              <option value='150'>150x150</option>\n              <option value='200'>200x200</option>\n            </select>\n            \n            <p onClick={this.seed}>Random SEED</p>\n          </div>\n          <div className='pauseButtons'>\n          {\n              this.state.pause ?\n              <AiFillPlayCircle style={{color:'black'}} onClick={this.startTimer}/> : <AiFillPauseCircle onClick={this.stopTimer} style={{color:'black'}}/>\n          }\n          </div>\n        <div className='navItem'>\n          <input type='file' onChange={this.changeFile} />\n          \n        </div>\n        </nav>\n        \n        <div className='gencounter'>\n          <p>Generacio: </p>\n          <p>{this.state.generation}</p>\n        </div>\n        {\n          this.state.R.survival.length < 1 ?\n          <div>\n          <p>Szabalyok: </p>\n          <div className='szabalydiv'>\n            <p>Tuleles</p>\n            {\n              this.state.N.survival.map(valtozo => {\n                return(\n                <p key={valtozo}>{valtozo}</p>\n                )\n              }\n              )\n            }\n          </div>\n          <div className='szabalydiv'>\n          <p>Halal</p>\n          {\n            this.state.N.death.map(valtozo => {\n              return(\n              <p key={valtozo}>{valtozo}</p>\n              )\n            }\n            )\n          }\n          </div>\n        </div>\n        :\n        <div>\n          <p>Szabalyok: </p>\n          <div className='szabalydiv'>\n            <p>Tuleles</p>\n            {\n              this.state.R.survival.map(valtozo => {\n                return(\n                <p key={valtozo}>{valtozo}</p>\n                )\n              }\n              )\n            }\n          </div>\n          <div className='szabalydiv'>\n          <p>Ujraeledes</p>\n          {\n            this.state.R.death.map(valtozo => {\n              return(\n              <p key={valtozo}>{valtozo}</p>\n              )\n            }\n            )\n          }\n          </div>\n        </div>\n        }\n        \n        <div id='myGrid'/>\n        <div className='canvasWrap'>\n          <canvas id=\"myCanvas\" width='900' height='900' ></canvas>\n        </div>\n        </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}